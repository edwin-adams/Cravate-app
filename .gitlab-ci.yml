stages:
  - build
  - deploy

build:
  stage: build
  script:
    - apt-get update
    # - apt-get install -y curl
    # # - apt-get install -y openssh-client
    # - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
    # - export NVM_DIR="$HOME/.nvm"
    # - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    # - source "$NVM_DIR/nvm.sh"
    # - nvm install 14.18.1
    # - cd backend
    # - npm install

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: fetch
  script:
    - apt-get update
    - apt-get install -y curl
    - apt-get install -y openssh-client
    - apt-get install -y git
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
    - export NVM_DIR="$HOME/.nvm"
    - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    - source "$NVM_DIR/nvm.sh"
    # - echo "$SSH_KEY" > id_rsa
    # - chmod 600 id_rsa
    # - export GIT_SSH_COMMAND="ssh -o 'StrictHostKeyChecking=no' -i $PWD/id_rsa"
    # - git config --global credential.helper store # store the credentials for future use
    # - git remote set-url origin git@git.cs.dal.ca:courses/2023-winter/csci-5308/group20.git # set the remote URL to use SSH
    # - git checkout main
    # - git pull # now Git will use the SSH key for authentication
    - ssh -o "StrictHostKeyChecking=no" -i id_rsa ec2-user@3.239.61.7 'cd group20/backend && nvm install --lts=fermium && echo "$SSH_KEY" > id_rsa && chmod 600 id_rsa && export GIT_SSH_COMMAND="ssh -o 'StrictHostKeyChecking=no' -i $PWD/id_rsa" && git config --global credential.helper store && git remote set-url origin git@git.cs.dal.ca:courses/2023-winter/csci-5308/group20.git && git checkout main && git pull && npm install && pm2 restart index.js'
  only:
    - main
  needs:
    - job: build
      artifacts: true